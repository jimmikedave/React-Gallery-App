{"version":3,"sources":["Components/SearchForm.js","Components/Nav.js","Components/Photo.js","Components/NotFound.js","Components/PhotoContainer.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","path","history","push","currentTarget","reset","className","onSubmit","this","type","onChange","name","ref","input","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","Nav","to","Photo","pic","data","id","serverId","server","farmId","farm","secretId","secret","url","src","NotFound","PhotoContainer","prevProps","currentTag","match","params","performSearch","pics","results","length","map","key","apiKey","process","App","axios","get","then","response","photos","photo","loading","catch","error","console","log","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a7c89a8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass SearchForm extends Component {\r\n\r\n    state = {\r\n        searchText: ''\r\n      }\r\n      \r\n      onSearchChange = e => {\r\n        this.setState({ searchText: e.target.value });\r\n      }\r\n      \r\n      //Updates the tag and path URL when search is submitted\r\n      handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSearch(this.query.value);\r\n        const path = `/search/${this.query.value}`;\r\n        this.props.history.push(path)\r\n        e.currentTarget.reset();\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n            <input \r\n            type=\"search\" \r\n            onChange={this.onSearchChange} \r\n            name=\"search\" \r\n            ref={(input) => this.query = input}\r\n            placeholder=\"Search\" \r\n            required/>\r\n            <button type=\"submit\" className=\"search-button\">\r\n                <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                </svg>\r\n            </button>\r\n        </form>\r\n        )\r\n  }\r\n}\r\n\r\nexport default withRouter (SearchForm);","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n   \r\nexport default class Nav extends Component{\r\n\r\n    //Creates the paths for Cacti, Dogs, and Blobfish\r\n    render() {\r\n        \r\n\r\n        return (\r\n    \r\n            <div className=\"main-nav\">\r\n                 <ul>\r\n                  <li><NavLink to='/Cacti'>Cacti</NavLink></li>\r\n                  <li><NavLink to='/Dogs'>Dogs</NavLink></li>\r\n                  <li><NavLink to='/Blobfish'>Blobfish</NavLink></li>\r\n                 </ul>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n//Displays photo based on photo id, server id, farm id, and secret id\r\nconst Photo = (props) => {\r\n\r\n    const pic = props.data;\r\n    const id = pic.id;\r\n    const serverId = pic.server;\r\n    const farmId = pic.farm;\r\n    const secretId = pic.secret; \r\n\r\n    const url = `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secretId}.jpg`;\r\n\r\n    return (\r\n            <li>\r\n                <img src={url} />\r\n            </li>\r\n        )\r\n    }\r\n\r\nexport default Photo;","import React from 'react';\r\n\r\n//Renders when 0 results are found\r\n//Try searching 123asdf123\r\nconst NotFound = () => {\r\nreturn (\r\n    <li className=\"not-found\">\r\n            <h3>No Results Found</h3>\r\n            <p>You search did not return any results. Please try again.</p>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Photo from './Photo';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nclass PhotoContainer extends Component {\r\n    \r\n    //Updates the pics array if the tag has updated\r\n    componentDidUpdate (prevProps) {\r\n        const currentTag = this.props.match.params.query;\r\n        const previousTag = prevProps.match.params.query;\r\n\r\n        if (currentTag !== previousTag) {\r\n            this.props.performSearch(currentTag)\r\n        }\r\n    };\r\n    \r\n    render () {\r\n\r\n        const results = this.props.data;\r\n        let pics;\r\n\r\n        //Displays pics if found and NotFound renders if 0 results show\r\n        if (results.length > 0) {\r\n            pics = results.map(pic => <Photo data={pic} key={pic.id}/>);\r\n        } else {\r\n            pics = <NotFound />\r\n        }\r\n\r\n        return (\r\n            <div className=\"photo-container\">\r\n                <h2>Results</h2>\r\n                <ul>\r\n                    {pics}\r\n                </ul>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default withRouter (PhotoContainer)\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n//App Components\nimport SearchForm from './Components/SearchForm';\nimport Nav from './Components/Nav';\nimport PhotoContainer from './Components/PhotoContainer';\n\n//Import apiKey from .env\nconst apiKey = process.env.REACT_APP_FLICKR_API_KEY;\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pics: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  //Fetches Flickr API and moves the data into the pics array\n  performSearch = (query = 'Snowy Mountain') => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        this.setState({\n          pics: response.data.photos.photo,\n          loading: false\n          });\n        })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\"> \n          <SearchForm onSearch={this.performSearch} />  \n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" render={() => <PhotoContainer\n              data={this.state.pics}\n              performSearch={this.performSearch} />}\n            />\n            {/* The tag clicked will pass in the route path to the PhotoContainer via match */}\n            <Route path=\"/:query\" render={({ match }) => <PhotoContainer\n              match={match}\n              data={this.state.pics}\n              performSearch={this.performSearch} /> }\n            />\n            <Route exact path=\"/search\" render={() => <PhotoContainer\n              data={this.state.pics}\n              performSearch={this.performSearch} />}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}